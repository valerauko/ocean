apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ocean.fullname" . }}
  labels:
    {{- include "ocean.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "ocean.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "ocean.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: "{{ .Chart.Name }}-generate-config"
          image: valerauko/env-replace:0.4.1
          workingDir: /tmp/env-input
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          env:
            - name: DESTINATION
              value: /shared/seafile/conf
            - name: ADMIN_EMAIL
              valueFrom:
                secretKeyRef:
                  name: {{ include "ocean.adminSecret" . }}
                  key: EMAIL
            - name: ADMIN_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ include "ocean.adminSecret" . }}
                  key: PASSWORD
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: "{{ template "ocean.fullname" . }}-key-secret"
                  key: KEY
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: {{ include "ocean.databaseSecret" . }}
                  key: USERNAME
            - name: MYSQL_HOST
              valueFrom:
                secretKeyRef:
                  name: {{ include "ocean.databaseSecret" . }}
                  key: HOSTNAME
            - name: MYSQL_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ include "ocean.databaseSecret" . }}
                  key: PASSWORD
          volumeMounts:
            - mountPath: /shared
              name: seafile-data
            - name: seafile-raw-configs
              mountPath: /tmp/env-input/admin.txt
              subPath: admin.txt
            - name: seafile-raw-configs
              mountPath: /tmp/env-input/ccnet.conf
              subPath: ccnet.conf
            - name: seafile-raw-configs
              mountPath: /tmp/env-input/gunicorn.conf.py
              subPath: gunicorn.conf.py
            - name: seafile-raw-configs
              mountPath: /tmp/env-input/seafdav.conf
              subPath: seafdav.conf
            - name: seafile-raw-configs
              mountPath: /tmp/env-input/seafile.conf
              subPath: seafile.conf
            - name: seafile-raw-configs
              mountPath: /tmp/env-input/seahub_settings.py
              subPath: seahub_settings.py
        - name: "{{ .Chart.Name }}-ensure-folders"
          image: alpine
          command:
            - "mkdir"
            - "-pv"
            - "/shared/seafile/ccnet"
            - "/shared/seafile/seafile-data"
          volumeMounts:
            - mountPath: /shared
              name: seafile-data
      containers:
        - name: "{{ .Chart.Name }}-memcached"
          image: memcached:1.5.6
          imagePullPolicy: {{ .Values.image.pullPolicy }}
        - name: "{{ .Chart.Name }}-seafile"
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.Version }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
            {{- if .Values.webDav.enabled }}
            - name: webDav
              containerPort: {{ .Values.webDav.port }}
              protocol: TCP
            {{- end }}
          livenessProbe:
            httpGet:
              path: /
              port: http
            failureThreshold: 6
            initialDelaySeconds: 30
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /
              port: http
            failureThreshold: 6
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          volumeMounts:
            - mountPath: /shared
              name: seafile-data
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: seafile-raw-configs
          configMap:
            name: "{{ template "ocean.fullname" . }}-raw-config"
        - name: seafile-data
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default (include "ocean.fullname" .) }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
