# Default values for ocean.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: valerauko/ocean
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

location: "https://docs.seafile.com"
timeZone: "Etc/UTC"

database:
  ## Existing secret for database credentials. Must have all the keys:
  ## USERNAME, HOSTNAME, PASSWORD.
  # existingSecret: "ocean-db-creds"
  username: "seafile"
  password: ""
  hostname: "mariadb.default.svc.cluster.local"

admin:
  email: me@example.com
  password: ""
  ## Existing secret for admin credentials. Must have all the keys:
  ## EMAIL, PASSWORD
  # existingSecret: ""

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
      #   - path: "/"
      #     port: "80"
      #   - path: "/seafhttp"
      #     port: "8082"
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

persistence:
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  # storageClass: "-"
  accessMode: ReadWriteOnce
  size: 10Gi
  ## If set uses the specified claim.
  # existingClaim: ""

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

webDav:
  enabled: false
  port: 8080

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

nodeSelector: {}
tolerations: []
affinity: {}
imagePullSecrets: []

nameOverride: ""
fullnameOverride: ""
